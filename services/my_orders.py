import logging
from telegram import Update
from telegram.ext import CallbackContext, ConversationHandler
from database import get_active_orders

SELECT_ORDER = 0


def my_orders(update: Update, context: CallbackContext) -> int:
    logging.info(f"User {update.message.from_user.username} entered my_orders function.")

    if 'conversation' in context.user_data and context.user_data['conversation']:
        logging.info(f"Error. User {update.message.from_user.username} tried to start new process without finishing previous.")
        update.message.reply_text(f"–í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞.\n–ó–∞–∫–æ–Ω—á–∏—Ç–µ –µ–≥–æ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /cancel")
        return ConversationHandler.END
    context.user_data['conversation'] = True

    username = update.message.from_user.username
    orders = get_active_orders(username)

    if not orders:
        update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤. –û–ø—É–±–ª–∏–∫—É–π—Ç–µ –ø–æ—Å—ã–ª–∫—É –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–∑–∫—É –≤ –º–µ–Ω—é.")
        context.user_data['conversation'] = False
        return ConversationHandler.END
    else:
        for order in orders:
            created_at = order[7].strftime('%d.%m.%Y')
            send_date = order[5].strftime('%d.%m.%Y')

            # –î–æ–±–∞–≤–ª—è–µ–º —É—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–ª—è order[11] - –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ—Å—ã–ª–∫–∞ –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–∑–∫–∞
            if order[9]:
                message_text = (f"üì¶ –í–∞—à–∞ –ø–æ—Å—ã–ª–∫–∞ ‚Ññ{order[0]} –æ—Ç {created_at}\n"
                                f"–û—Ç–∫—É–¥–∞: {order[2].capitalize()}\n"
                                f"–ö—É–¥–∞: {order[3].capitalize()}\n"
                                f"–í–µ—Å: {float(order[4])} –∫–≥\n"
                                f"–ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {send_date}\n"
                                f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order[6].capitalize()}\n")
            else:
                message_text = (f"‚úàÔ∏è –í–∞—à–∞ –ø–µ—Ä–µ–≤–æ–∑–∫–∞ ‚Ññ{order[0]} –æ—Ç {created_at}\n"
                                f"–û—Ç–∫—É–¥–∞: {order[2].capitalize()}\n"
                                f"–ö—É–¥–∞: {order[3].capitalize()}\n"
                                f"–ì–æ—Ç–æ–≤—ã –≤–∑—è—Ç—å: {float(order[4])} –∫–≥\n"
                                f"–î–∞—Ç–∞ –ø–æ–µ–∑–¥–∫–∏: {send_date}\n"
                                f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order[6].capitalize()}\n")

            update.message.reply_text(message_text)

        update.message.reply_text("–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤. \n–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞–∂–º–∏—Ç–µ /delete")
        context.user_data['conversation'] = False
        return ConversationHandler.END

